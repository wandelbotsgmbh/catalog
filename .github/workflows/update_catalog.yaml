---
name: Update Catalog Entry

on:  # yamllint disable-line rule:truthy
  repository_dispatch:
    types: [update-entry]

jobs:
  update-catalog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    env:
      ENTRY: ${{ github.event.client_payload.entry }}
      VERSION: ${{ github.event.client_payload.version }}
      IMAGE: ${{ github.event.client_payload.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Verify Parameters
        run: |
          echo "check version: ${{ github.event.client_payload.version }}"
          echo "Version: ${VERSION}"
          echo "Entry: ${ENTRY}"
          echo "Image: ${IMAGE}"
          
          if [ -z "${VERSION}" ]; then
            echo "missing field 'version'"
            exit 1
          fi

          if [ -z "${ENTRY}" ]; then
            echo "missing field 'entry'"
            exit 1
          fi

          if [ -z "${IMAGE}" ]; then
            echo "missing field 'image'"
            exit 1
          fi

      - name: Set Entry Version And Image
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i -I4 '.app.containerImage.image = "${IMAGE}"' catalog/${ENTRY}/manifest.yaml \
            && yq -i -I4 '.version = "${VERSION}"' catalog/${ENTRY}/manifest.yaml

      - name: Print Changes
        run: |
          cat catalog/${ENTRY}/manifest.yaml

      # - name: Create PR
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #   run: |
      #     VERSION="${{ github.event.client_payload.version }}"
      #     ENTRY="${{ github.event.client_payload.entry }}"
      #     BRANCH="feature/update-${ENTRY}-to-${VERSION}"
      #     git checkout -b $BRANCH

      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"

      #     git add catalog/${ENTRY}/manifest.yaml
      #     git commit -m "Update ${ENTRY} to ${VERSION}"
      #     git push -u origin $BRANCH

      #     gh pr create --title "Update ${ENTRY} to ${VERSION}" --body "Automated PR from ${ENTRY} release" --base main
      #     gh pr merge --squash --auto
